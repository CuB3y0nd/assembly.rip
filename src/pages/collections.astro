---
import BangumiSection from "@/components/bangumi/BangumiSection.astro";
import TabNav from "@/components/bangumi/TabNav.astro";
import MainGridLayout from "@/layouts/MainGridLayout.astro";
import type {
	UserSubjectCollection,
	UserSubjectCollectionResponse,
} from "@/types/bangumi";

const bangumiConfig = {
	username: "cub3y0nd",
	apiUrl: "https://api.bgm.tv",
	categories: {
		book: false,
		anime: true,
		music: false,
		game: false,
		real: true,
	},
	pagination: {
		limit: 50, // 每页获取数量
		delay: 50, // 请求间隔毫秒数，避免频率限制
		maxTotal: 1000, // 最大获取总数，防止无限循环（0=无限制）
	},
};

const categoryMap = {
	book: { id: "book", name: "书籍", subjectType: 1 },
	anime: { id: "anime", name: "追番", subjectType: 2 },
	music: { id: "music", name: "音乐", subjectType: 3 },
	game: { id: "game", name: "游戏", subjectType: 4 },
	real: { id: "real", name: "追剧", subjectType: 6 },
};

// 获取Bangumi数据的函数 - 支持分页获取所有数据
async function fetchBangumiData(username: string, subjectType: number) {
	try {
		const { limit, delay, maxTotal } = bangumiConfig.pagination;
		let offset = 0;
		let allData: UserSubjectCollection[] = [];
		let hasMore = true;

		console.log(
			`[Bangumi] 开始获取用户 ${username} 的 subjectType ${subjectType} 数据...`,
		);

		while (hasMore) {
			// 检查是否超过最大获取限制
			if (maxTotal > 0 && allData.length >= maxTotal) {
				console.log(`[Bangumi] 已达到最大获取限制 ${maxTotal}，停止获取`);
				break;
			}

			const url = `${bangumiConfig.apiUrl}/v0/users/${username}/collections?subject_type=${subjectType}&limit=${limit}&offset=${offset}`;

			console.log(`[Bangumi] 正在获取数据: ${url} (已获取: ${allData.length})`);

			const response = await fetch(url, {
				headers: {
					"User-Agent": "CuB3y0nd/assembly.rip",
					Accept: "application/json",
				},
			});

			if (!response.ok) {
				console.warn(
					`[Bangumi] 无法获取数据 (状态码: ${response.status}):`,
					url,
				);
				break;
			}

			const data = (await response.json()) as UserSubjectCollectionResponse;
			const currentBatch = data.data || [];

			if (currentBatch.length > 0) {
				allData = allData.concat(currentBatch);
				offset += limit;

				// 如果本次获取的数据少于limit，说明已经是最后一页
				if (currentBatch.length < limit) {
					hasMore = false;
				}
			} else {
				hasMore = false;
			}

			// 添加延迟避免请求过于频繁
			if (hasMore) {
				await new Promise((resolve) => setTimeout(resolve, delay));
			}
		}

		console.log(`[Bangumi] 总共获取到 ${allData.length} 条数据`);
		return allData;
	} catch (error) {
		console.error("[Bangumi] 获取数据时出错:", error);
		return [];
	}
}

// 获取所有启用分类的数据
const bangumiData: Record<string, UserSubjectCollection[]> = {};
const tabs: Array<{ id: string; name: string; count: number }> = [];

console.log("[Bangumi] 从 API 获取数据");

for (const [categoryKey, enabled] of Object.entries(bangumiConfig.categories)) {
	if (enabled && categoryMap[categoryKey as keyof typeof categoryMap]) {
		const categoryInfo = categoryMap[categoryKey as keyof typeof categoryMap];
		try {
			const data = await fetchBangumiData(
				bangumiConfig.username,
				categoryInfo.subjectType,
			);
			bangumiData[categoryKey] = data;
			tabs.push({
				id: categoryKey,
				name: categoryInfo.name,
				count: data.length,
			});
		} catch (error) {
			console.error(`[Bangumi] 获取 ${categoryInfo.name} 数据失败:`, error);
			bangumiData[categoryKey] = [];
			tabs.push({
				id: categoryKey,
				name: categoryInfo.name,
				count: 0,
			});
		}
	}
}

const activeTab = tabs[0]?.id || "anime";
---

<MainGridLayout title={"Collections"} description={"Bangumi Collections"}>
  <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
    <div class="card-base z-10 px-9 py-6 relative w-full">
      <!-- Tab 导航和内容 -->
      {tabs.length > 0 ? (
        <>
          <TabNav tabs={tabs} activeTab={activeTab} />

          <!-- 内容区域 -->
          {tabs.map((tab) => (
                      <BangumiSection
            sectionId={tab.id}
            items={bangumiData[tab.id] || []}
            isActive={tab.id === activeTab}
            itemsPerPage={6}
          />
          ))}
        </>
      ) : (
        <div class="text-center py-12">
          <h2 class="text-xl font-medium text-gray-600 dark:text-gray-400 mb-2">
            暂无数据
          </h2>
          <p class="text-gray-500 dark:text-gray-400 mb-4">
            可能的原因：用户名不存在、网络连接问题或API限制
          </p>
          <div class="text-sm text-gray-400 dark:text-gray-500 space-y-1">
            <div>用户名: {bangumiConfig.username}</div>
            <div>API: {bangumiConfig.apiUrl}</div>
            <div class="mt-3 text-xs">
              提示：请在页面配置中设置正确的Bangumi用户名
            </div>
          </div>
        </div>
      )}
    </div>
  </div>
</MainGridLayout>

<style>
  /* 自定义样式 */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
